---
- name: "Assertions: ar_os_environment (load-env-vars)"
  assert:
    that: "{{ ar_os_environment_assertions }}"

- include_role:
    name: ar_git_repo
    tasks_from: checkout
  vars:
    ar_git_repo_url: "{{ ar_os_environment_git_repo }}"
    ar_git_repo_ssh_key: "{{ ar_os_environment_git_ssh_key }}"
    ar_git_repo_ssh_key_pass: "{{ ar_os_environment_git_ssh_key_pass | default('') }}"
    ar_git_repo_gitignore_entries: ['*.key']
    ar_git_repo_version: "{{ ar_os_environment_git_version }}"

- set_fact:
    _ar_os_environment_git_repo_dest: "{{ _ar_git_repo_paths[ar_os_environment_git_repo] }}"

- name: Export 'envdir' var
  set_fact:
    envdir: "{{ _ar_os_environment_git_repo_dest }}/{{ ar_os_environment_name }}"

- debug:
    msg: "app env file: {{ envdir }}/{{ ar_os_environment_varsdir }}/{{ ar_os_environment_app_varsfile }}"

- name: Include app environment var file
  include_vars: "{{ envdir }}/{{ ar_os_environment_varsdir }}/{{ ar_os_environment_app_varsfile }}"

- name: Export 'deployment_phase' var
  set_fact:
    deployment_phase: "{{ ar_os_environment_name }}"

- name: Export 'generated_config_path' var
  set_fact:
    generated_config_path: "{{ envdir }}/generated"

- name: Export 'phase_base_dir' var
  set_fact:
    phase_base_dir: "{{ envdir }}"

- name: Export 'varfiles_dir' var
  set_fact:
    varfiles_dir: "{{ phase_base_dir }}/varfiles"

- name: Set certificate paths
  set_fact:
    local_cert_path: "{{ generated_config_path }}/certs"
    local_key_path: "{{ lookup('env','HOME') }}/keys/local"

- name: Set path variables
  set_fact:
    app_vault_file_name: "{{ app_secrets_file | default(varfiles_dir + '/' + ar_os_environment_app_vaultfile) }}"

- name: Stat the vault
  stat:
    path: "{{ app_vault_file_name }}"
  register: app_vault_result

- name: Include app environment vault file
  include_vars: "{{ app_vault_file_name }}"
  when: app_vault_result.stat.exists

# Look to remove the following - ties too specifically to the env vars details
- name: Set the taget app instance names
  set_fact:
    app_target_instance_names: "{{ targets | default(app_instances | json_query('[*].name')) }}"
  when: app_instances is defined

- name: Set the taget app instances
  set_fact:
    app_target_instances: "{{ app_instances | select_from_array_of_dicts('name', app_target_instance_names) }}"
  when: app_instances is defined
